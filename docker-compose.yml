version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME_EXTERNAL: EXTERNAL
      KAFKA_LISTENER_EXTERNAL_PORT: 9092
      KAFKA_LISTENER_EXTERNAL_HOSTNAME: kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - app-network

  mongo:
    image: mongo:5.0
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - app-network

  producer:
    build:
      context: ./  # Root directory context
      dockerfile: ./producer/Dockerfile  # Ensure Dockerfile path is correct
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: sensor-data
    depends_on:
      - kafka
    networks:
      - app-network

  consumer:
    build:
      context: ./  # Root directory context
      dockerfile: ./consumer/Dockerfile  # Ensure Dockerfile path is correct
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: sensor-data
      MONGO_URI: mongodb://mongo:27017/iot-data
    depends_on:
      - kafka
      - mongo
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
